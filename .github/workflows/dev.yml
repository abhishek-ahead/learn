name: Upload Chat FE production Server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.11.0
          registry-url: "https://registry.npmjs.org"

      - name: Node Version
        run: node -v

      - name: NPM Version
        run: npm -v

      - name: Install dependencies
        run: npm install

      - name: Use .env file for demo.sns
        env:
          # ENV_FILE: ${{ secrets.ENV_FILE_TEST1 }}
          EXPO_PUBLIC_SERVER_URL: "https://test1.socialnetworking.solutions"
          EXPO_PUBLIC_CLIENT_ID: "657bebaca6bc665648ba838e"
          EXPO_PUBLIC_CLIENT_SECRET: "fb10c572-a61f-4760-8d3f-252fbe803dba"
        run: | 
          echo "$EXPO_PUBLIC_SERVER_URL" >> .env
          echo "$EXPO_PUBLIC_CLIENT_ID" >> .env
          echo "$EXPO_PUBLIC_CLIENT_SECRET" >> .env
      
      
      # - name: check env file path
      #   run: find . -name '.env' -exec ls {} \;

      # - name: check env file content
      #   run: find . -name '.env' -exec cat {} \;

      # - name: Print Secret
      #   run: echo ${{ secrets.ENV_FILE }}

      # - name: Print current working directory
      #   run: echo "Current working directory:" $PWD

      # - name: list files at PWD
      #   run: echo "files are :" cd $PWD && ls

      - name: Build web
        run: npm run build:web

      # - name: List build directory contents
      #   run: ls ${{ github.workspace }}

      # - name: Commit changes
      # run: |
      # git config --local user.email "actions@github.com"
      # git config --local user.name "GitHub Actions"
      # git add .
      # git commit -m "Build and deploy to S3 [skip ci]"

      #- uses: actions/checkout@master

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        # env:
        #   AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_PROD }}

      - name: Delete dist folder from S3 bucket
        run: aws s3 rm s3://${{ secrets.AWS_S3_BUCKET_TEST1 }} --recursive

      # - name: Invalidate CloudFront cache
      #   run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID_DEMO_SNS }} --paths "/*"

      - name: upload to first s3 bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_TEST1 }}
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_REGION: "us-east-1"
          SOURCE_DIR: ${{ github.workspace }}/dist

        #second build for the demo.se Server
      
      - name: Print Enviornment Variable
        run: echo $EXPO_PUBLIC_SERVER_URL

      # - name: Remove earlier env
      #   run: rm -rf ${{ github.workspace }}/.env
      
      
      # - name: Remove earlier env
      #   run: find . -name '.env' -exec rm -rf {} \;

      - name: check env file content
        run: find . -name '.env' -exec cat {} \;

      - name: Print Enviornment Variable
        run: echo $EXPO_PUBLIC_SERVER_URL

      # - name: Print secret value of env file
      #   run: echo ${{ github.workspace }}/.env | sed 's/./& /g'

      - name: Use second .env file
        env:
          # ENV_FILE_NEW: ${{ secrets.ENV_FILE_TEST2 }}
          EXPO_PUBLIC_SERVER_URL: "https://test2.socialnetworking.solutions"
          EXPO_PUBLIC_CLIENT_ID: "657bebaca6bc665648ba838e"
          EXPO_PUBLIC_CLIENT_SECRET: "fb10c572-a61f-4760-8d3f-252fbe803dba"
        run: | 
          echo "$EXPO_PUBLIC_SERVER_URL" >> .env
          echo "$EXPO_PUBLIC_CLIENT_ID" >> .env
          echo "$EXPO_PUBLIC_CLIENT_SECRET" >> .env
        # run: echo "$ENV_FILE_NEW" > .env

      # - name: check env file path
      #   run: find . -name '.env' -exec ls {} \;

      # - name: check env file content
      #   run: find . -name '.env' -exec cat {} \;

      # - name: Print Secret Second file
      #   run: echo ${{ secrets.ENV_FILE_DEMO_SE }}

      # - name: Print ENV Second file
      #   run: cat ${{ github.workspace }}/.env

      # - name: Print ENV Second file without workspace
      #   run: cat .env

      - name: List build directory contents
        run: ls ${{ github.workspace }}/dist

      - name: remove local files first
        run: rm -rf ${{ github.workspace }}/dist

      - name: Rebuild web with second .env
        run: npm run build:web

      # - name: Print Enviornment Variable
      #   run: echo $EXPO_PUBLIC_SERVER_URL

      # - name: Print secret value of env file
      #   run: echo ${{ github.workspace }}/.env | sed 's/./& /g'

      # - name: Configure AWS credentials for second bucket
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      - name: Delete dist folder from second S3 bucket
        run: aws s3 rm s3://${{ secrets.AWS_S3_BUCKET_TEST2 }} --recursive

      # - name: Invalidate CloudFront cache for second bucket
      #   run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID_DEMO_SE }} --paths '/*'

      # - name: List build directory contents
      #   run: ls ${{ github.workspace }}/dist

      - name: Upload to second S3 bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_TEST2 }}
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_REGION: "us-east-1"
          SOURCE_DIR: ${{ github.workspace }}/dist
